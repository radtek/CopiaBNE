@using BNE.BLL.Custom
@using BNE.Web.Vagas.Code
@using BNE.Web.Vagas.Models

@model BNE.Web.Vagas.Models.VisualizarVaga
@{
    var cssClassQualificacaoVaga = @Model.Vaga.TipoOrigem.Equals(3) ? "qualificacaoVaga parceiro" : "qualificacaoVaga bne";
    var textoQualificacaoVaga = @Model.Vaga.TipoOrigem.Equals(3) ? "vaga de parceiro do BNE" : "vaga auditada pelo BNE";
}

@section css
{
    <link href="~/Content/Vaga.css" rel="stylesheet" />
    <link href="~/Content/VisualizarVaga.css" rel="stylesheet" />
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
}
@section scripts
{
    <script src="~/Scripts/local/Vagas.js"></script>
    <script src="~/Scripts/local/Vaga.js"></script>
}
<div class="visualizar_vaga">
    @if (@Model.Vaga.FlagInativo || @Model.Vaga.FlagVagaArquivada)
    {
        <div class="faixa_enc">
            <div class="candidatura_encerrada">
                <i class="fa fa-bullhorn"></i> | CANDIDATURA ENCERRADA
            </div>
        </div>
    }
    <div class="box_vaga">
        <div class="vaga">
            <div class="@cssClassQualificacaoVaga">
                <div class="img"><span>@textoQualificacaoVaga</span></div>
            </div>
            @if (!String.IsNullOrEmpty(@Model.Vaga.DescricaoDeficiencia) && @Model.Vaga.DescricaoDeficiencia != "Nenhuma")
            {
                <i class="fa fa-wheelchair fa-3x ico_pcd"></i>
            }
            <span class="titulo">
                @{ var existeUrl = this.Request.Url != null;}
                @{ var somenteContratoEstagio = !string.IsNullOrEmpty(@Model.Vaga.TipoVinculo) && @Model.Vaga.TipoVinculo.Trim().Equals("Estágio", StringComparison.OrdinalIgnoreCase); }

                @if ("Estagiário" == @Model.Vaga.Funcao
                || (somenteContratoEstagio)
                || (existeUrl && Request.Url.ToString().Contains("estagio")))
                {
                    <span class="coluna_web_estagios_vaga">
                        <a href="http://employerestagios.com.br/?utm_source=bne&utm_campaign=gridvagas&utm_term=bne_visualizar_vaga_empresa" target="_blank">
                            <img class="imagem_web_estagios" title="Vaga do WebEstágios" src="~/Images/ic_webstg.png" />
                        </a>
                    </span>
                }

                @if ("Estagiário" != @Model.Vaga.Funcao
                && (somenteContratoEstagio || (existeUrl && Request.Url.ToString().Contains("estagio"))))
                {
                    <h1 class="funcao">Estágio para @Model.Vaga.Funcao</h1>
                }
                else
                {
                    <h1 class="funcao">@Model.Vaga.Funcao</h1>
                }
                <span class="quantidade_vaga">(@Helper.RetornarDesricaoQuantidadeVaga(@Model.Vaga.QuantidadeVaga))</span>
            </span>

            <span class="salario">
                @if (@Model.Vaga.SalarioInicial == null && @Model.Vaga.SalarioFinal == null && !@Model.Vaga.ContratoDeEstagio)
                {
                    <span class="Media">Media salarial do mercado<br /></span>
                    @Model.Vaga.MediaSalarial
                }
            </span>
            <span class="salario">
                @if (@Model.Vaga.SalarioInicial != null || @Model.Vaga.SalarioFinal != null || @Model.Vaga.ContratoDeEstagio)
                {
                    @Helper.RetornarDesricaoSalario(@Model.Vaga.SalarioInicial, @Model.Vaga.SalarioFinal)
                }

            </span>

            </span> - <span class="cidade"><span><span>@Model.Vaga.Cidade</span> </span></span>

            @if (!String.IsNullOrWhiteSpace(@Model.Vaga.Atribuicao))
            {
                <h2>Atribuições:</h2>
                <span class="atribuicao">@Model.Vaga.Atribuicao</span>
            }
            @if (!string.IsNullOrWhiteSpace(@Model.Vaga.Beneficio))
            {
                <h2>Benefícios:</h2>
                <span>@Model.Vaga.Beneficio</span>
            }
            @if (!string.IsNullOrWhiteSpace(@Model.Vaga.Escolaridade) || !string.IsNullOrWhiteSpace(@Model.Vaga.Requisito))
            {
                <h2>Requisitos:</h2>
                <p>
                    <span>@Model.Vaga.Escolaridade</span><span>@Model.Vaga.Requisito</span>
                </p>

                if (!string.IsNullOrWhiteSpace(@Model.Vaga.Disponibilidade))
                {
                    <p>
                        Disponibilidade de Trabalho:
                        <span>@Model.Vaga.Disponibilidade</span>
                    </p>
                }
                if (!string.IsNullOrWhiteSpace(@Model.Vaga.TipoVinculo))
                {
                    <p>
                        Tipo de Contrato:
                        <span>@Model.Vaga.TipoVinculo</span>
                    </p>
                }
            }
            <p class="codigo_data_vaga">
                <span>Código da vaga: @Model.Vaga.Codigo</span>
                <span class="data_vaga">Anunciada em <span>@Model.Vaga.DataAnuncio.ToShortDateString()</span></span>
            </p>
            @if (!@Model.Vaga.FlagInativo && !@Model.Vaga.FlagVagaArquivada)
            {
                <div class="container_botoes">
                    <div class="compartilhamento">
                        <span class="compartilhe">COMPARTILHE:</span>
                        @{ Html.RenderPartial("_VagaCompartilhamento", new VagaCompartilhamento { Identificador = Model.Vaga.IdentificadorVaga, Cidade = Model.Vaga.Cidade, Funcao = Model.Vaga.Funcao, SalarioInicial = Model.Vaga.SalarioInicial, SalarioFinal = Model.Vaga.SalarioFinal, URLVaga = Model.Vaga.URL + "%3Futm_term%3DCadastroRapido", URLIconeFacebook = Model.Vaga.URLIconeFacebook }); }
                    </div>
                </div>
                            }
        </div>
    </div>
</div>
