// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client
{
    using System.Threading.Tasks;
   using Models;

    /// <summary>
    /// Extension methods for Empresa.
    /// </summary>
    public static partial class EmpresaExtensions
    {
            /// <summary>
            /// Retorna uma selecionadora a partir do CPF e Data de Nascimento.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cpf'>
            /// Cpf da selecionadora desejado
            /// </param>
            /// <param name='nascimento'>
            /// Data de nascimento do currículo desejado
            /// </param>
            public static Selecionadora ObterSelecionadoraBycpfnascimento(this IEmpresa operations, double cpf, System.DateTime nascimento)
            {
                return System.Threading.Tasks.Task.Factory.StartNew(s => ((IEmpresa)s).ObterSelecionadoraBycpfnascimentoAsync(cpf, nascimento), operations, System.Threading.CancellationToken.None, System.Threading.Tasks.TaskCreationOptions.None, System.Threading.Tasks.TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Retorna uma selecionadora a partir do CPF e Data de Nascimento.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cpf'>
            /// Cpf da selecionadora desejado
            /// </param>
            /// <param name='nascimento'>
            /// Data de nascimento do currículo desejado
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async System.Threading.Tasks.Task<Selecionadora> ObterSelecionadoraBycpfnascimentoAsync(this IEmpresa operations, double cpf, System.DateTime nascimento, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                using (var _result = await operations.ObterSelecionadoraBycpfnascimentoWithHttpMessagesAsync(cpf, nascimento, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
