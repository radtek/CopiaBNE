// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client.Models
{
    using System.Linq;

    /// <summary>
    /// Informações de cursos complementares do candidato
    /// </summary>
    public partial class CursoComplementar
    {
        /// <summary>
        /// Initializes a new instance of the CursoComplementar class.
        /// </summary>
        public CursoComplementar() { }

        /// <summary>
        /// Initializes a new instance of the CursoComplementar class.
        /// </summary>
        /// <param name="instituicao">Nome da instituição</param>
        /// <param name="nomeCurso">Nome do curso
        /// Recomenda-se o envio de um dos valores presentes na tabela
        /// Cursos.</param>
        /// <param name="cidade">Nome da cidade onde foi cursado
        /// Formato: "NomeCidade/SiglaEstado" (Ex.: São Paulo/SP)</param>
        /// <param name="anoConclusao">Ano de conclusão do curso. Pode ser
        /// passado ou futuro.</param>
        /// <param name="cargaHoraria">Carga horária do curso</param>
        public CursoComplementar(string instituicao, string nomeCurso, string cidade = default(string), int? anoConclusao = default(int?), int? cargaHoraria = default(int?))
        {
            Instituicao = instituicao;
            NomeCurso = nomeCurso;
            Cidade = cidade;
            AnoConclusao = anoConclusao;
            CargaHoraria = cargaHoraria;
        }

        /// <summary>
        /// Gets or sets nome da instituição
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Instituicao")]
        public string Instituicao { get; set; }

        /// <summary>
        /// Gets or sets nome do curso
        /// Recomenda-se o envio de um dos valores presentes na tabela Cursos.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NomeCurso")]
        public string NomeCurso { get; set; }

        /// <summary>
        /// Gets or sets nome da cidade onde foi cursado
        /// Formato: "NomeCidade/SiglaEstado" (Ex.: São Paulo/SP)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Cidade")]
        public string Cidade { get; set; }

        /// <summary>
        /// Gets or sets ano de conclusão do curso. Pode ser passado ou futuro.
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "AnoConclusao")]
        public int? AnoConclusao { get; set; }

        /// <summary>
        /// Gets or sets carga horária do curso
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "CargaHoraria")]
        public int? CargaHoraria { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Instituicao == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Instituicao");
            }
            if (NomeCurso == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NomeCurso");
            }
        }
    }
}
