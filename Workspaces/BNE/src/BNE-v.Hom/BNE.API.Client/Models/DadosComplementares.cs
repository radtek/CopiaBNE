// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client.Models
{
    using System.Linq;

    /// <summary>
    /// Classe com informações complementares
    /// </summary>
    public partial class DadosComplementares
    {
        /// <summary>
        /// Initializes a new instance of the DadosComplementares class.
        /// </summary>
        public DadosComplementares() { }

        /// <summary>
        /// Initializes a new instance of the DadosComplementares class.
        /// </summary>
        /// <param name="veiculos">Veículos do candidato</param>
        /// <param name="categoriaCNH">Categoria da CNH (Carteira Nacional de
        /// Habilitação). Possible values include: 'A', 'B', 'C', 'D', 'E',
        /// 'AB', 'AC', 'AD', 'AE'</param>
        /// <param name="numeroCnh">Número da CNH (Carteira Nacional de
        /// Habilitação)</param>
        /// <param name="outrosConhecimentos">Descrição de outros
        /// conhecimentos e habilidades</param>
        /// <param name="observacoes">Outras observações pertinentes</param>
        /// <param name="disponibilidades">Lista com as disponibilidades de
        /// horário de trabalho e viagens</param>
        /// <param name="disponibilidadeOutrasCidades">Lista com as cidades
        /// para disponibilidade de trabalho.
        /// Nome da cidade no formato "NomeCidade/SiglaEstado" (Ex.: São
        /// Paulo/SP)</param>
        /// <param name="raca">Raça do candidato de acordo com a tabela do
        /// governo. Possible values include: 'Indigena', 'Branca', 'Negra',
        /// 'Amarela', 'Parda', 'NaoInformado'</param>
        /// <param name="altura">Altura em metros</param>
        /// <param name="peso">Altura em metros</param>
        /// <param name="possuiFilhos">Indica se o candidato possui
        /// filhos</param>
        /// <param name="deficiencia">Deficiência do candidato
        /// Deve estar presente na tabela Deficiencias</param>
        /// <param name="complementoDeficiencia">Complemento da
        /// deficiência</param>
        public DadosComplementares(System.Collections.Generic.IList<VeiculoCurriculo> veiculos = default(System.Collections.Generic.IList<VeiculoCurriculo>), string categoriaCNH = default(string), double? numeroCnh = default(double?), string outrosConhecimentos = default(string), string observacoes = default(string), System.Collections.Generic.IList<string> disponibilidades = default(System.Collections.Generic.IList<string>), System.Collections.Generic.IList<string> disponibilidadeOutrasCidades = default(System.Collections.Generic.IList<string>), string raca = default(string), double? altura = default(double?), double? peso = default(double?), bool? possuiFilhos = default(bool?), string deficiencia = default(string), string complementoDeficiencia = default(string))
        {
            Veiculos = veiculos;
            CategoriaCNH = categoriaCNH;
            NumeroCnh = numeroCnh;
            OutrosConhecimentos = outrosConhecimentos;
            Observacoes = observacoes;
            Disponibilidades = disponibilidades;
            DisponibilidadeOutrasCidades = disponibilidadeOutrasCidades;
            Raca = raca;
            Altura = altura;
            Peso = peso;
            PossuiFilhos = possuiFilhos;
            Deficiencia = deficiencia;
            ComplementoDeficiencia = complementoDeficiencia;
        }

        /// <summary>
        /// Gets or sets veículos do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Veiculos")]
        public System.Collections.Generic.IList<VeiculoCurriculo> Veiculos { get; set; }

        /// <summary>
        /// Gets or sets categoria da CNH (Carteira Nacional de Habilitação).
        /// Possible values include: 'A', 'B', 'C', 'D', 'E', 'AB', 'AC',
        /// 'AD', 'AE'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "CategoriaCNH")]
        public string CategoriaCNH { get; set; }

        /// <summary>
        /// Gets or sets número da CNH (Carteira Nacional de Habilitação)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NumeroCnh")]
        public double? NumeroCnh { get; set; }

        /// <summary>
        /// Gets or sets descrição de outros conhecimentos e habilidades
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "OutrosConhecimentos")]
        public string OutrosConhecimentos { get; set; }

        /// <summary>
        /// Gets or sets outras observações pertinentes
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Observacoes")]
        public string Observacoes { get; set; }

        /// <summary>
        /// Gets or sets lista com as disponibilidades de horário de trabalho
        /// e viagens
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Disponibilidades")]
        public System.Collections.Generic.IList<string> Disponibilidades { get; set; }

        /// <summary>
        /// Gets or sets lista com as cidades para disponibilidade de
        /// trabalho.
        /// Nome da cidade no formato "NomeCidade/SiglaEstado" (Ex.: São
        /// Paulo/SP)
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DisponibilidadeOutrasCidades")]
        public System.Collections.Generic.IList<string> DisponibilidadeOutrasCidades { get; set; }

        /// <summary>
        /// Gets or sets raça do candidato de acordo com a tabela do governo.
        /// Possible values include: 'Indigena', 'Branca', 'Negra',
        /// 'Amarela', 'Parda', 'NaoInformado'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Raca")]
        public string Raca { get; set; }

        /// <summary>
        /// Gets or sets altura em metros
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Altura")]
        public double? Altura { get; set; }

        /// <summary>
        /// Gets or sets altura em metros
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Peso")]
        public double? Peso { get; set; }

        /// <summary>
        /// Gets or sets indica se o candidato possui filhos
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "PossuiFilhos")]
        public bool? PossuiFilhos { get; set; }

        /// <summary>
        /// Gets or sets deficiência do candidato
        /// Deve estar presente na tabela Deficiencias
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Deficiencia")]
        public string Deficiencia { get; set; }

        /// <summary>
        /// Gets or sets complemento da deficiência
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ComplementoDeficiencia")]
        public string ComplementoDeficiencia { get; set; }

    }
}
