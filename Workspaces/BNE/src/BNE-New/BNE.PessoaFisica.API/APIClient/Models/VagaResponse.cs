// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace BNE.PessoaFisica.API.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class VagaResponse
    {
        /// <summary>
        /// Initializes a new instance of the VagaResponse class.
        /// </summary>
        public VagaResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VagaResponse class.
        /// </summary>
        public VagaResponse(string funcao = default(string), int? idFuncao = default(int?), int? idCidade = default(int?), int? idVaga = default(int?), int? idTipoVinculo = default(int?), decimal? salarioDe = default(decimal?), decimal? salarioAte = default(decimal?), string cidade = default(string), string uf = default(string), string codigoVaga = default(string), string atribuicoes = default(string), string beneficios = default(string), string requisitos = default(string), System.DateTime? dataAnuncio = default(System.DateTime?), bool? flgAuditada = default(bool?), bool? flgArquivada = default(bool?), bool? flgInativo = default(bool?), bool? flgConfidencial = default(bool?), string nomeEmpresa = default(string), string descricao = default(string), string salarioDescricao = default(string), IList<string> descricaoTipoVinculo = default(IList<string>), string descricaoAreaBNEPesquisa = default(string), bool? flagDeficiencia = default(bool?), string descricaoDeficiencia = default(string), int? idfDeficiencia = default(int?), bool? eEstagio = default(bool?), bool? eEfetivo = default(bool?), bool? eAprendiz = default(bool?), bool? flgPremium = default(bool?), PlanoResponse planoPremium = default(PlanoResponse), string bairro = default(string), IList<string> linkPaginasSemelhantes = default(IList<string>))
        {
            Funcao = funcao;
            IdFuncao = idFuncao;
            IdCidade = idCidade;
            IdVaga = idVaga;
            IdTipoVinculo = idTipoVinculo;
            SalarioDe = salarioDe;
            SalarioAte = salarioAte;
            Cidade = cidade;
            UF = uf;
            CodigoVaga = codigoVaga;
            Atribuicoes = atribuicoes;
            Beneficios = beneficios;
            Requisitos = requisitos;
            DataAnuncio = dataAnuncio;
            FlgAuditada = flgAuditada;
            FlgArquivada = flgArquivada;
            FlgInativo = flgInativo;
            FlgConfidencial = flgConfidencial;
            NomeEmpresa = nomeEmpresa;
            Descricao = descricao;
            SalarioDescricao = salarioDescricao;
            DescricaoTipoVinculo = descricaoTipoVinculo;
            DescricaoAreaBNEPesquisa = descricaoAreaBNEPesquisa;
            FlagDeficiencia = flagDeficiencia;
            DescricaoDeficiencia = descricaoDeficiencia;
            IdfDeficiencia = idfDeficiencia;
            EEstagio = eEstagio;
            EEfetivo = eEfetivo;
            EAprendiz = eAprendiz;
            FlgPremium = flgPremium;
            PlanoPremium = planoPremium;
            Bairro = bairro;
            LinkPaginasSemelhantes = linkPaginasSemelhantes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Funcao")]
        public string Funcao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdFuncao")]
        public int? IdFuncao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdCidade")]
        public int? IdCidade { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdVaga")]
        public int? IdVaga { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdTipoVinculo")]
        public int? IdTipoVinculo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalarioDe")]
        public decimal? SalarioDe { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalarioAte")]
        public decimal? SalarioAte { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Cidade")]
        public string Cidade { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UF")]
        public string UF { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CodigoVaga")]
        public string CodigoVaga { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Atribuicoes")]
        public string Atribuicoes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Beneficios")]
        public string Beneficios { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Requisitos")]
        public string Requisitos { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DataAnuncio")]
        public System.DateTime? DataAnuncio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FlgAuditada")]
        public bool? FlgAuditada { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FlgArquivada")]
        public bool? FlgArquivada { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FlgInativo")]
        public bool? FlgInativo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FlgConfidencial")]
        public bool? FlgConfidencial { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NomeEmpresa")]
        public string NomeEmpresa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Descricao")]
        public string Descricao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SalarioDescricao")]
        public string SalarioDescricao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DescricaoTipoVinculo")]
        public IList<string> DescricaoTipoVinculo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DescricaoAreaBNEPesquisa")]
        public string DescricaoAreaBNEPesquisa { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FlagDeficiencia")]
        public bool? FlagDeficiencia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DescricaoDeficiencia")]
        public string DescricaoDeficiencia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Idf_Deficiencia")]
        public int? IdfDeficiencia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eEstagio")]
        public bool? EEstagio { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eEfetivo")]
        public bool? EEfetivo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eAprendiz")]
        public bool? EAprendiz { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FlgPremium")]
        public bool? FlgPremium { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlanoPremium")]
        public PlanoResponse PlanoPremium { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Bairro")]
        public string Bairro { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LinkPaginasSemelhantes")]
        public IList<string> LinkPaginasSemelhantes { get; set; }

    }
}
