// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace BNE.PessoaFisica.API.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PreCurriculoResponse
    {
        /// <summary>
        /// Initializes a new instance of the PreCurriculoResponse class.
        /// </summary>
        public PreCurriculoResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PreCurriculoResponse class.
        /// </summary>
        public PreCurriculoResponse(int id, string nome = default(string), string email = default(string), string dDDCelular = default(string), string celular = default(string), int? idFuncao = default(int?), string descricaoFuncao = default(string), int? idCidade = default(int?), int? tempoExperiencia = default(int?), decimal? pretensaoSalarial = default(decimal?), int? idVaga = default(int?), int? idCurriculo = default(int?), System.DateTime? dataCadastro = default(System.DateTime?))
        {
            Id = id;
            Nome = nome;
            Email = email;
            DDDCelular = dDDCelular;
            Celular = celular;
            IdFuncao = idFuncao;
            DescricaoFuncao = descricaoFuncao;
            IdCidade = idCidade;
            TempoExperiencia = tempoExperiencia;
            PretensaoSalarial = pretensaoSalarial;
            IdVaga = idVaga;
            IdCurriculo = idCurriculo;
            DataCadastro = dataCadastro;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Nome")]
        public string Nome { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DDDCelular")]
        public string DDDCelular { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Celular")]
        public string Celular { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdFuncao")]
        public int? IdFuncao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DescricaoFuncao")]
        public string DescricaoFuncao { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdCidade")]
        public int? IdCidade { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TempoExperiencia")]
        public int? TempoExperiencia { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PretensaoSalarial")]
        public decimal? PretensaoSalarial { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdVaga")]
        public int? IdVaga { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IdCurriculo")]
        public int? IdCurriculo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DataCadastro")]
        public System.DateTime? DataCadastro { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
