// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace BNE.PessoaFisica.API
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for RankingEmail.
    /// </summary>
    public static partial class RankingEmailExtensions
    {
            /// <summary>
            /// Recupera as sugestões de email
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='query'>
            /// </param>
            /// <param name='limit'>
            /// </param>
            public static IList<string> GetRankingEmails(this IRankingEmail operations, string query = default(string), int? limit = default(int?))
            {
                return operations.GetRankingEmailsAsync(query, limit).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Recupera as sugestões de email
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='query'>
            /// </param>
            /// <param name='limit'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<string>> GetRankingEmailsAsync(this IRankingEmail operations, string query = default(string), int? limit = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetRankingEmailsWithHttpMessagesAsync(query, limit, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
