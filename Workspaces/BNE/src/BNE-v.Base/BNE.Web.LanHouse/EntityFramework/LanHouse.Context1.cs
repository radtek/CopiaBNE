//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BNE.Web.LanHouse.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LanEntities : DbContext
    {
        public LanEntities()
            : base("name=LanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BNE_Codigo_Desconto> BNE_Codigo_Desconto { get; set; }
        public virtual DbSet<BNE_Codigo_Desconto_Plano> BNE_Codigo_Desconto_Plano { get; set; }
        public virtual DbSet<BNE_Curriculo> BNE_Curriculo { get; set; }
        public virtual DbSet<BNE_Experiencia_Profissional> BNE_Experiencia_Profissional { get; set; }
        public virtual DbSet<BNE_Formacao> BNE_Formacao { get; set; }
        public virtual DbSet<BNE_Funcao_Erro_Sinonimo> BNE_Funcao_Erro_Sinonimo { get; set; }
        public virtual DbSet<BNE_Funcao_Pretendida> BNE_Funcao_Pretendida { get; set; }
        public virtual DbSet<BNE_Plano> BNE_Plano { get; set; }
        public virtual DbSet<TAB_Contato> TAB_Contato { get; set; }
        public virtual DbSet<TAB_Filial> TAB_Filial { get; set; }
        public virtual DbSet<TAB_Fonte> TAB_Fonte { get; set; }
        public virtual DbSet<TAB_Origem_Filial> TAB_Origem_Filial { get; set; }
        public virtual DbSet<TAB_Pessoa_Fisica> TAB_Pessoa_Fisica { get; set; }
        public virtual DbSet<TAB_Cidade> TAB_Cidade { get; set; }
        public virtual DbSet<TAB_Funcao> TAB_Funcao { get; set; }
        public virtual DbSet<TAB_Parametro> TAB_Parametro { get; set; }
        public virtual DbSet<TAB_Pessoa_Fisica_Rede_Social> TAB_Pessoa_Fisica_Rede_Social { get; set; }
        public virtual DbSet<TAB_Endereco> TAB_Endereco { get; set; }
        public virtual DbSet<TAB_Pessoa_Fisica_Foto> TAB_Pessoa_Fisica_Foto { get; set; }
        public virtual DbSet<LAN_Administrador> LAN_Administrador { get; set; }
        public virtual DbSet<LAN_Companhia> LAN_Companhia { get; set; }
        public virtual DbSet<LAN_Fase_Cadastro> LAN_Fase_Cadastro { get; set; }
        public virtual DbSet<LAN_Oportunidade> LAN_Oportunidade { get; set; }
        public virtual DbSet<LAN_Oportunidade_Cidade> LAN_Oportunidade_Cidade { get; set; }
        public virtual DbSet<LAN_Oportunidade_Curriculo_Historico> LAN_Oportunidade_Curriculo_Historico { get; set; }
        public virtual DbSet<LAN_Perfil> LAN_Perfil { get; set; }
        public virtual DbSet<LAN_Plano_Adquirido> LAN_Plano_Adquirido { get; set; }
        public virtual DbSet<LAN_Plano_Situacao> LAN_Plano_Situacao { get; set; }
        public virtual DbSet<LAN_Oportunidade_Curriculo> LAN_Oportunidade_Curriculo { get; set; }
        public virtual DbSet<TAB_Filial_Logo> TAB_Filial_Logo { get; set; }
        public virtual DbSet<TAB_Parametro_Filial> TAB_Parametro_Filial { get; set; }
        public virtual DbSet<TAB_Regiao_Metropolitana> TAB_Regiao_Metropolitana { get; set; }
        public virtual DbSet<TAB_Regiao_Metropolitana_Cidade> TAB_Regiao_Metropolitana_Cidade { get; set; }
    
        public virtual ObjectResult<BUSCA_EMPRESA_RETORNO> BUSCA_EMPRESA(Nullable<int> paginaAtual, Nullable<int> quantidadeRegistros, Nullable<int> cidade, string siglaEstado, string nomeEmpresa, Nullable<int> curriculo)
        {
            var paginaAtualParameter = paginaAtual.HasValue ?
                new ObjectParameter("PaginaAtual", paginaAtual) :
                new ObjectParameter("PaginaAtual", typeof(int));
    
            var quantidadeRegistrosParameter = quantidadeRegistros.HasValue ?
                new ObjectParameter("QuantidadeRegistros", quantidadeRegistros) :
                new ObjectParameter("QuantidadeRegistros", typeof(int));
    
            var cidadeParameter = cidade.HasValue ?
                new ObjectParameter("Cidade", cidade) :
                new ObjectParameter("Cidade", typeof(int));
    
            var siglaEstadoParameter = siglaEstado != null ?
                new ObjectParameter("SiglaEstado", siglaEstado) :
                new ObjectParameter("SiglaEstado", typeof(string));
    
            var nomeEmpresaParameter = nomeEmpresa != null ?
                new ObjectParameter("NomeEmpresa", nomeEmpresa) :
                new ObjectParameter("NomeEmpresa", typeof(string));
    
            var curriculoParameter = curriculo.HasValue ?
                new ObjectParameter("Curriculo", curriculo) :
                new ObjectParameter("Curriculo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BUSCA_EMPRESA_RETORNO>("BUSCA_EMPRESA", paginaAtualParameter, quantidadeRegistrosParameter, cidadeParameter, siglaEstadoParameter, nomeEmpresaParameter, curriculoParameter);
        }
    }
}
