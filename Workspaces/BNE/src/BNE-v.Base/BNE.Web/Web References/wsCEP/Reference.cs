//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace BNE.Web.wsCEP {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="cepwsSoap", Namespace="http://tempuri.org/")]
    public partial class cepws : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private ServiceAuthHeader serviceAuthHeaderValueField;
        
        private System.Threading.SendOrPostCallback CompletarCEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecuperarQuantidadeEnderecosPorCEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaCEPOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultaCEPPaginacaoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public cepws() {
            this.Url = global::BNE.Web.Properties.Settings.Default.BNE_Web_wsCEP_cepws;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public ServiceAuthHeader ServiceAuthHeaderValue {
            get {
                return this.serviceAuthHeaderValueField;
            }
            set {
                this.serviceAuthHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CompletarCEPCompletedEventHandler CompletarCEPCompleted;
        
        /// <remarks/>
        public event RecuperarQuantidadeEnderecosPorCEPCompletedEventHandler RecuperarQuantidadeEnderecosPorCEPCompleted;
        
        /// <remarks/>
        public event ConsultaCEPCompletedEventHandler ConsultaCEPCompleted;
        
        /// <remarks/>
        public event ConsultaCEPPaginacaoCompletedEventHandler ConsultaCEPPaginacaoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceAuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompletarCEP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CompletarCEP(ref CEP cep) {
            object[] results = this.Invoke("CompletarCEP", new object[] {
                        cep});
            cep = ((CEP)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CompletarCEPAsync(CEP cep) {
            this.CompletarCEPAsync(cep, null);
        }
        
        /// <remarks/>
        public void CompletarCEPAsync(CEP cep, object userState) {
            if ((this.CompletarCEPOperationCompleted == null)) {
                this.CompletarCEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompletarCEPOperationCompleted);
            }
            this.InvokeAsync("CompletarCEP", new object[] {
                        cep}, this.CompletarCEPOperationCompleted, userState);
        }
        
        private void OnCompletarCEPOperationCompleted(object arg) {
            if ((this.CompletarCEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompletarCEPCompleted(this, new CompletarCEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceAuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecuperarQuantidadeEnderecosPorCEP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RecuperarQuantidadeEnderecosPorCEP(CEP cep, ref int qtdeEnderecosEncontrados) {
            object[] results = this.Invoke("RecuperarQuantidadeEnderecosPorCEP", new object[] {
                        cep,
                        qtdeEnderecosEncontrados});
            qtdeEnderecosEncontrados = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RecuperarQuantidadeEnderecosPorCEPAsync(CEP cep, int qtdeEnderecosEncontrados) {
            this.RecuperarQuantidadeEnderecosPorCEPAsync(cep, qtdeEnderecosEncontrados, null);
        }
        
        /// <remarks/>
        public void RecuperarQuantidadeEnderecosPorCEPAsync(CEP cep, int qtdeEnderecosEncontrados, object userState) {
            if ((this.RecuperarQuantidadeEnderecosPorCEPOperationCompleted == null)) {
                this.RecuperarQuantidadeEnderecosPorCEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecuperarQuantidadeEnderecosPorCEPOperationCompleted);
            }
            this.InvokeAsync("RecuperarQuantidadeEnderecosPorCEP", new object[] {
                        cep,
                        qtdeEnderecosEncontrados}, this.RecuperarQuantidadeEnderecosPorCEPOperationCompleted, userState);
        }
        
        private void OnRecuperarQuantidadeEnderecosPorCEPOperationCompleted(object arg) {
            if ((this.RecuperarQuantidadeEnderecosPorCEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecuperarQuantidadeEnderecosPorCEPCompleted(this, new RecuperarQuantidadeEnderecosPorCEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceAuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaCEP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ConsultaCEP(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao) {
            object[] results = this.Invoke("ConsultaCEP", new object[] {
                        cep,
                        logradouro,
                        tipoLogradouro,
                        bairro,
                        estado,
                        cidade,
                        ordenacao});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaCEPAsync(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao) {
            this.ConsultaCEPAsync(cep, logradouro, tipoLogradouro, bairro, estado, cidade, ordenacao, null);
        }
        
        /// <remarks/>
        public void ConsultaCEPAsync(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao, object userState) {
            if ((this.ConsultaCEPOperationCompleted == null)) {
                this.ConsultaCEPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaCEPOperationCompleted);
            }
            this.InvokeAsync("ConsultaCEP", new object[] {
                        cep,
                        logradouro,
                        tipoLogradouro,
                        bairro,
                        estado,
                        cidade,
                        ordenacao}, this.ConsultaCEPOperationCompleted, userState);
        }
        
        private void OnConsultaCEPOperationCompleted(object arg) {
            if ((this.ConsultaCEPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaCEPCompleted(this, new ConsultaCEPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceAuthHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsultaCEPPaginacao", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ConsultaCEPPaginacao(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string nomeColuna, string direcaoOrdenacao, int paginaCorrente, int tamanhoPagina, out int totalRegistros) {
            object[] results = this.Invoke("ConsultaCEPPaginacao", new object[] {
                        cep,
                        logradouro,
                        tipoLogradouro,
                        bairro,
                        estado,
                        cidade,
                        nomeColuna,
                        direcaoOrdenacao,
                        paginaCorrente,
                        tamanhoPagina});
            totalRegistros = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultaCEPPaginacaoAsync(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string nomeColuna, string direcaoOrdenacao, int paginaCorrente, int tamanhoPagina) {
            this.ConsultaCEPPaginacaoAsync(cep, logradouro, tipoLogradouro, bairro, estado, cidade, nomeColuna, direcaoOrdenacao, paginaCorrente, tamanhoPagina, null);
        }
        
        /// <remarks/>
        public void ConsultaCEPPaginacaoAsync(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string nomeColuna, string direcaoOrdenacao, int paginaCorrente, int tamanhoPagina, object userState) {
            if ((this.ConsultaCEPPaginacaoOperationCompleted == null)) {
                this.ConsultaCEPPaginacaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultaCEPPaginacaoOperationCompleted);
            }
            this.InvokeAsync("ConsultaCEPPaginacao", new object[] {
                        cep,
                        logradouro,
                        tipoLogradouro,
                        bairro,
                        estado,
                        cidade,
                        nomeColuna,
                        direcaoOrdenacao,
                        paginaCorrente,
                        tamanhoPagina}, this.ConsultaCEPPaginacaoOperationCompleted, userState);
        }
        
        private void OnConsultaCEPPaginacaoOperationCompleted(object arg) {
            if ((this.ConsultaCEPPaginacaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultaCEPPaginacaoCompleted(this, new ConsultaCEPPaginacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class ServiceAuthHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string codHashField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string CodHash {
            get {
                return this.codHashField;
            }
            set {
                this.codHashField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CEP {
        
        private int idField;
        
        private string logradouroField;
        
        private string numeroField;
        
        private string tipoLogradouroField;
        
        private string bairroField;
        
        private string bairroAbreviadoField;
        
        private string cidadeField;
        
        private string estadoField;
        
        private string cepField;
        
        private bool encontrouField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Logradouro {
            get {
                return this.logradouroField;
            }
            set {
                this.logradouroField = value;
            }
        }
        
        /// <remarks/>
        public string Numero {
            get {
                return this.numeroField;
            }
            set {
                this.numeroField = value;
            }
        }
        
        /// <remarks/>
        public string TipoLogradouro {
            get {
                return this.tipoLogradouroField;
            }
            set {
                this.tipoLogradouroField = value;
            }
        }
        
        /// <remarks/>
        public string Bairro {
            get {
                return this.bairroField;
            }
            set {
                this.bairroField = value;
            }
        }
        
        /// <remarks/>
        public string BairroAbreviado {
            get {
                return this.bairroAbreviadoField;
            }
            set {
                this.bairroAbreviadoField = value;
            }
        }
        
        /// <remarks/>
        public string Cidade {
            get {
                return this.cidadeField;
            }
            set {
                this.cidadeField = value;
            }
        }
        
        /// <remarks/>
        public string Estado {
            get {
                return this.estadoField;
            }
            set {
                this.estadoField = value;
            }
        }
        
        /// <remarks/>
        public string Cep {
            get {
                return this.cepField;
            }
            set {
                this.cepField = value;
            }
        }
        
        /// <remarks/>
        public bool Encontrou {
            get {
                return this.encontrouField;
            }
            set {
                this.encontrouField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CompletarCEPCompletedEventHandler(object sender, CompletarCEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompletarCEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompletarCEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public CEP cep {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CEP)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void RecuperarQuantidadeEnderecosPorCEPCompletedEventHandler(object sender, RecuperarQuantidadeEnderecosPorCEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecuperarQuantidadeEnderecosPorCEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecuperarQuantidadeEnderecosPorCEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int qtdeEnderecosEncontrados {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ConsultaCEPCompletedEventHandler(object sender, ConsultaCEPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaCEPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaCEPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ConsultaCEPPaginacaoCompletedEventHandler(object sender, ConsultaCEPPaginacaoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultaCEPPaginacaoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultaCEPPaginacaoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRegistros {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591