/// <reference path="employer.min.js" />
/// <reference path="employer.util.min.js" />

employer.util.string={toNumber:function(string){var i=0;var negativo=false;while(string.charAt(i)==' '){i++;}
if(string.charAt(i)=='-'){negativo=true;}
var temp=string.replace(/\./g,'');temp=temp.replace(/,/g,'.');temp=temp.replace(/[^0-9.]/g,'');if(negativo){return-(+temp);}else{return(+temp);}},trim:function(str){return str.replace(/^\s+|\s+$/g,'');},shortTrim:function(str){return str.replace(/^\s\s*/,'').replace(/\s\s*$/,'');},longTrim:function(str){var str=str.replace(/^\s\s*/,''),ws=/\s/,i=str.length;while(ws.test(str.charAt(--i)));return str.slice(0,i+1);},replace:function(p,t){var _p;var _pg;var _tt=t;var _ocur=[];var _val=[];if(typeof p=="string"){_p=new RegExp(p);_pg=new RegExp(p,"g");}
if(t.match(_p)){for(var i=2;i<arguments.length;i++){if(i==2){if(typeof arguments[2]=="string"){_val.push(arguments[2]);}else{_val=arguments[2];}}else{if(typeof arguments[i]=="object"&&employer.util.isArray(arguments[i])){for(var j=0;j<arguments[i].length;j++){_val.push(arguments[i][j]);}}else{_val.push(arguments[i]);}}}
var _tmp_s=0;while(t.indexOf(p,_tmp_s)>-1){_ocur.push(t.indexOf(p,_tmp_s));_tmp_s=t.indexOf(p,_tmp_s)+p.length;}
if(_ocur.length!=_val.length){return"Lista de valores informados ("+_val.length+") diferente da quantidade de ocorrência ("+_ocur.length+") no contexto informado.";}
for(var k=0;k<_val.length;k++){_tt=_tt.replace(_p,_val[k]);}
return _tt;}}};