// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client.Models
{
    using System.Linq;

    /// <summary>
    /// Classe com as informações de experiências profissionais
    /// </summary>
    public partial class CadastroExperienciaProfissional
    {
        /// <summary>
        /// Initializes a new instance of the CadastroExperienciaProfissional
        /// class.
        /// </summary>
        public CadastroExperienciaProfissional() { }

        /// <summary>
        /// Initializes a new instance of the CadastroExperienciaProfissional
        /// class.
        /// </summary>
        /// <param name="nomeEmpresa">Nome da empresa da experiência</param>
        /// <param name="area">Área de atuação da empresa.
        /// Valor informado deve estar presente na tabela Areas</param>
        /// <param name="dataAdmissao">Data de entrada na empresa</param>
        /// <param name="funcao">Função exercida na experiência</param>
        /// <param name="atribuicoes">Descrição das atividades
        /// exercidas</param>
        /// <param name="salario">Valor do último salário recebido</param>
        /// <param name="dataDemissao">Data de saída da empresa</param>
        public CadastroExperienciaProfissional(string nomeEmpresa, string area, System.DateTime dataAdmissao, string funcao, string atribuicoes, double salario, System.DateTime? dataDemissao = default(System.DateTime?))
        {
            NomeEmpresa = nomeEmpresa;
            Area = area;
            DataAdmissao = dataAdmissao;
            DataDemissao = dataDemissao;
            Funcao = funcao;
            Atribuicoes = atribuicoes;
            Salario = salario;
        }

        /// <summary>
        /// Gets or sets nome da empresa da experiência
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NomeEmpresa")]
        public string NomeEmpresa { get; set; }

        /// <summary>
        /// Gets or sets área de atuação da empresa.
        /// Valor informado deve estar presente na tabela Areas
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Area")]
        public string Area { get; set; }

        /// <summary>
        /// Gets or sets data de entrada na empresa
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DataAdmissao")]
        public System.DateTime DataAdmissao { get; set; }

        /// <summary>
        /// Gets or sets data de saída da empresa
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DataDemissao")]
        public System.DateTime? DataDemissao { get; set; }

        /// <summary>
        /// Gets or sets função exercida na experiência
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Funcao")]
        public string Funcao { get; set; }

        /// <summary>
        /// Gets or sets descrição das atividades exercidas
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Atribuicoes")]
        public string Atribuicoes { get; set; }

        /// <summary>
        /// Gets or sets valor do último salário recebido
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Salario")]
        public double Salario { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (NomeEmpresa == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "NomeEmpresa");
            }
            if (Area == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Area");
            }
            if (Funcao == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Funcao");
            }
            if (Atribuicoes == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Atribuicoes");
            }
        }
    }
}
