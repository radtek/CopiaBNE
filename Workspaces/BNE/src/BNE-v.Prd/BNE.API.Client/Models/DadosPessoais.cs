// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client.Models
{
    using System.Linq;

    /// <summary>
    /// Classe com os dados pessoais do candidato
    /// </summary>
    public partial class DadosPessoais
    {
        /// <summary>
        /// Initializes a new instance of the DadosPessoais class.
        /// </summary>
        public DadosPessoais() { }

        /// <summary>
        /// Initializes a new instance of the DadosPessoais class.
        /// </summary>
        /// <param name="estadoCivil">Estado civil do candidato
        /// Um dos valores presentes da tabela EstadosCivis</param>
        /// <param name="endereco">Endereço do candidato</param>
        /// <param name="numeroRg">Número do RG do candidato</param>
        /// <param name="orgaoEmissorRg">Órgão emissor do RG do
        /// candidato</param>
        /// <param name="dDDTelefoneFixo">DDD do telefone fixo</param>
        /// <param name="numeroTelefoneFixo">Número do telefone fixo</param>
        /// <param name="dDDCelularRecado">DDD do celular para recados do
        /// candidato</param>
        /// <param name="numeroCelularRecado">Número do celular para recados
        /// do candidato</param>
        /// <param name="nomeContatoCelular">Pessoa com que deve-se deixar
        /// recado no telefone celular de recado</param>
        /// <param name="dDDTelefoneFixoRecado">DDD do telefone fixo para
        /// recados do candidato</param>
        /// <param name="numeroTelefoneFixoRecado">Número do telefone fixo
        /// para recados do candidato</param>
        /// <param name="nomeContatoTelefoneFixo">Pessoa com que deve-se
        /// deixar recado no telefone fixo de recado</param>
        public DadosPessoais(string estadoCivil, EnderecoCurriculo endereco, double? numeroRg = default(double?), string orgaoEmissorRg = default(string), int? dDDTelefoneFixo = default(int?), double? numeroTelefoneFixo = default(double?), int? dDDCelularRecado = default(int?), double? numeroCelularRecado = default(double?), string nomeContatoCelular = default(string), int? dDDTelefoneFixoRecado = default(int?), double? numeroTelefoneFixoRecado = default(double?), string nomeContatoTelefoneFixo = default(string))
        {
            NumeroRg = numeroRg;
            OrgaoEmissorRg = orgaoEmissorRg;
            EstadoCivil = estadoCivil;
            Endereco = endereco;
            DDDTelefoneFixo = dDDTelefoneFixo;
            NumeroTelefoneFixo = numeroTelefoneFixo;
            DDDCelularRecado = dDDCelularRecado;
            NumeroCelularRecado = numeroCelularRecado;
            NomeContatoCelular = nomeContatoCelular;
            DDDTelefoneFixoRecado = dDDTelefoneFixoRecado;
            NumeroTelefoneFixoRecado = numeroTelefoneFixoRecado;
            NomeContatoTelefoneFixo = nomeContatoTelefoneFixo;
        }

        /// <summary>
        /// Gets or sets número do RG do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NumeroRg")]
        public double? NumeroRg { get; set; }

        /// <summary>
        /// Gets or sets órgão emissor do RG do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "OrgaoEmissorRg")]
        public string OrgaoEmissorRg { get; set; }

        /// <summary>
        /// Gets or sets estado civil do candidato
        /// Um dos valores presentes da tabela EstadosCivis
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "EstadoCivil")]
        public string EstadoCivil { get; set; }

        /// <summary>
        /// Gets or sets endereço do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Endereco")]
        public EnderecoCurriculo Endereco { get; set; }

        /// <summary>
        /// Gets or sets DDD do telefone fixo
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DDDTelefoneFixo")]
        public int? DDDTelefoneFixo { get; set; }

        /// <summary>
        /// Gets or sets número do telefone fixo
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NumeroTelefoneFixo")]
        public double? NumeroTelefoneFixo { get; set; }

        /// <summary>
        /// Gets or sets DDD do celular para recados do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DDDCelularRecado")]
        public int? DDDCelularRecado { get; set; }

        /// <summary>
        /// Gets or sets número do celular para recados do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NumeroCelularRecado")]
        public double? NumeroCelularRecado { get; set; }

        /// <summary>
        /// Gets or sets pessoa com que deve-se deixar recado no telefone
        /// celular de recado
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NomeContatoCelular")]
        public string NomeContatoCelular { get; set; }

        /// <summary>
        /// Gets or sets DDD do telefone fixo para recados do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DDDTelefoneFixoRecado")]
        public int? DDDTelefoneFixoRecado { get; set; }

        /// <summary>
        /// Gets or sets número do telefone fixo para recados do candidato
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NumeroTelefoneFixoRecado")]
        public double? NumeroTelefoneFixoRecado { get; set; }

        /// <summary>
        /// Gets or sets pessoa com que deve-se deixar recado no telefone fixo
        /// de recado
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "NomeContatoTelefoneFixo")]
        public string NomeContatoTelefoneFixo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EstadoCivil == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "EstadoCivil");
            }
            if (Endereco == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Endereco");
            }
            if (this.Endereco != null)
            {
                this.Endereco.Validate();
            }
        }
    }
}
