// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client.Models
{
    using System.Linq;

    public partial class AtualizaUsuario
    {
        /// <summary>
        /// Initializes a new instance of the AtualizaUsuario class.
        /// </summary>
        public AtualizaUsuario() { }

        /// <summary>
        /// Initializes a new instance of the AtualizaUsuario class.
        /// </summary>
        public AtualizaUsuario(string nome, System.DateTime dataNascimento, string email, System.Collections.Generic.IList<ExportaCandidatoFuncoesParam> funcoes, string cidade, double salario, string dDDCelular, string celular, int escolaridade, double cPF, int? sexo = default(int?))
        {
            Nome = nome;
            DataNascimento = dataNascimento;
            Email = email;
            Funcoes = funcoes;
            Cidade = cidade;
            Salario = salario;
            DDDCelular = dDDCelular;
            Celular = celular;
            Escolaridade = escolaridade;
            CPF = cPF;
            Sexo = sexo;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Nome")]
        public string Nome { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DataNascimento")]
        public System.DateTime DataNascimento { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Funcoes")]
        public System.Collections.Generic.IList<ExportaCandidatoFuncoesParam> Funcoes { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Cidade")]
        public string Cidade { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Salario")]
        public double Salario { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DDDCelular")]
        public string DDDCelular { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Celular")]
        public string Celular { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Escolaridade")]
        public int Escolaridade { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "CPF")]
        public double CPF { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Sexo")]
        public int? Sexo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Nome == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Nome");
            }
            if (Email == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Email");
            }
            if (Funcoes == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Funcoes");
            }
            if (Cidade == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Cidade");
            }
            if (DDDCelular == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "DDDCelular");
            }
            if (Celular == null)
            {
                throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.CannotBeNull, "Celular");
            }
            if (this.Nome != null)
            {
                if (this.Nome.Length > 100)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MaxLength, "Nome", 100);
                }
                if (this.Nome.Length < 0)
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.MinLength, "Nome", 0);
                }
            }
            if (this.Email != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.Email, "(^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,4}(?:\\.[a-z]{2})?)$)"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "Email", "(^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,4}(?:\\.[a-z]{2})?)$)");
                }
            }
            if (this.DDDCelular != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.DDDCelular, "^[1-9][0-9]"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "DDDCelular", "^[1-9][0-9]");
                }
            }
            if (this.Celular != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(this.Celular, "(^[9][0-9][0-9]{7})|(^[6-9][0-9]{7})"))
                {
                    throw new Microsoft.Rest.ValidationException(Microsoft.Rest.ValidationRules.Pattern, "Celular", "(^[9][0-9][0-9]{7})|(^[6-9][0-9]{7})");
                }
            }
        }
    }
}
