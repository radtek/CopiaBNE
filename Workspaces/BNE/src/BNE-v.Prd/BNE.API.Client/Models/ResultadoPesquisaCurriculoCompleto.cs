// Code generated by Microsoft (R) AutoRest Code Generator 0.17.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace BNE.WebServices.API.Client.Models
{
    using System.Linq;

    public partial class ResultadoPesquisaCurriculoCompleto
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ResultadoPesquisaCurriculoCompleto class.
        /// </summary>
        public ResultadoPesquisaCurriculoCompleto() { }

        /// <summary>
        /// Initializes a new instance of the
        /// ResultadoPesquisaCurriculoCompleto class.
        /// </summary>
        /// <param name="dataHoraCandidatura">Data e hora da candidatura.
        /// Propriedade somente será preenchida quando retornado pelos
        /// endpoints de recuperação de candidatura</param>
        public ResultadoPesquisaCurriculoCompleto(string foto = default(string), bool? vip = default(bool?), double? cpf = default(double?), string dtaAtualizacao = default(string), string dtaNascimento = default(string), string dddCelular = default(string), string numCelular = default(string), string dddTelefone = default(string), string numTelefone = default(string), string email = default(string), string nomeCompleto = default(string), string sexo = default(string), string estadoCivil = default(string), int? idade = default(int?), string funcoes = default(string), double? pretensao = default(double?), string escolaridade = default(string), string observacoes = default(string), bool? aceitaEstagio = default(bool?), string cepEndereco = default(string), string logradouroEndereco = default(string), string numeroEndereco = default(string), string complementoEndereco = default(string), string bairroEndereco = default(string), string cidade = default(string), string estado = default(string), string carteira = default(string), int? idCurriculo = default(int?), string numeroRG = default(string), string orgaoExpeditor = default(string), string deficiente = default(string), string caracteristicasPessoais = default(string), string outrosConhecimento = default(string), bool? flagViagem = default(bool?), System.Collections.Generic.IList<ExperienciaProfissional> listExperienciaProfissional = default(System.Collections.Generic.IList<ExperienciaProfissional>), System.Collections.Generic.IList<Idioma> idiomas = default(System.Collections.Generic.IList<Idioma>), System.Collections.Generic.IList<Formacao> formacoes = default(System.Collections.Generic.IList<Formacao>), System.DateTime? dataHoraCandidatura = default(System.DateTime?))
        {
            Foto = foto;
            Vip = vip;
            Cpf = cpf;
            DtaAtualizacao = dtaAtualizacao;
            DtaNascimento = dtaNascimento;
            DddCelular = dddCelular;
            NumCelular = numCelular;
            DddTelefone = dddTelefone;
            NumTelefone = numTelefone;
            Email = email;
            NomeCompleto = nomeCompleto;
            Sexo = sexo;
            EstadoCivil = estadoCivil;
            Idade = idade;
            Funcoes = funcoes;
            Pretensao = pretensao;
            Escolaridade = escolaridade;
            Observacoes = observacoes;
            AceitaEstagio = aceitaEstagio;
            CepEndereco = cepEndereco;
            LogradouroEndereco = logradouroEndereco;
            NumeroEndereco = numeroEndereco;
            ComplementoEndereco = complementoEndereco;
            BairroEndereco = bairroEndereco;
            Cidade = cidade;
            Estado = estado;
            Carteira = carteira;
            IdCurriculo = idCurriculo;
            NumeroRG = numeroRG;
            OrgaoExpeditor = orgaoExpeditor;
            Deficiente = deficiente;
            CaracteristicasPessoais = caracteristicasPessoais;
            OutrosConhecimento = outrosConhecimento;
            FlagViagem = flagViagem;
            ListExperienciaProfissional = listExperienciaProfissional;
            Idiomas = idiomas;
            Formacoes = formacoes;
            DataHoraCandidatura = dataHoraCandidatura;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "foto")]
        public string Foto { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "vip")]
        public bool? Vip { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cpf")]
        public double? Cpf { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dtaAtualizacao")]
        public string DtaAtualizacao { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dtaNascimento")]
        public string DtaNascimento { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dddCelular")]
        public string DddCelular { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numCelular")]
        public string NumCelular { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "dddTelefone")]
        public string DddTelefone { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numTelefone")]
        public string NumTelefone { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "nomeCompleto")]
        public string NomeCompleto { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "sexo")]
        public string Sexo { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "estadoCivil")]
        public string EstadoCivil { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "idade")]
        public int? Idade { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "funcoes")]
        public string Funcoes { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "pretensao")]
        public double? Pretensao { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "escolaridade")]
        public string Escolaridade { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "observacoes")]
        public string Observacoes { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "aceitaEstagio")]
        public bool? AceitaEstagio { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cepEndereco")]
        public string CepEndereco { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "logradouroEndereco")]
        public string LogradouroEndereco { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numeroEndereco")]
        public string NumeroEndereco { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "complementoEndereco")]
        public string ComplementoEndereco { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "bairroEndereco")]
        public string BairroEndereco { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "cidade")]
        public string Cidade { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "estado")]
        public string Estado { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "carteira")]
        public string Carteira { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "idCurriculo")]
        public int? IdCurriculo { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "numeroRG")]
        public string NumeroRG { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "orgaoExpeditor")]
        public string OrgaoExpeditor { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "deficiente")]
        public string Deficiente { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "caracteristicasPessoais")]
        public string CaracteristicasPessoais { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "outrosConhecimento")]
        public string OutrosConhecimento { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "FlagViagem")]
        public bool? FlagViagem { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "listExperienciaProfissional")]
        public System.Collections.Generic.IList<ExperienciaProfissional> ListExperienciaProfissional { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "idiomas")]
        public System.Collections.Generic.IList<Idioma> Idiomas { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "formacoes")]
        public System.Collections.Generic.IList<Formacao> Formacoes { get; set; }

        /// <summary>
        /// Gets or sets data e hora da candidatura. Propriedade somente será
        /// preenchida quando retornado pelos endpoints de recuperação de
        /// candidatura
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DataHoraCandidatura")]
        public System.DateTime? DataHoraCandidatura { get; set; }

    }
}
