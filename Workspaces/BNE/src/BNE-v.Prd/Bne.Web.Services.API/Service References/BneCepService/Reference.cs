//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bne.Web.Services.API.BneCepService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CEP", Namespace="http://schemas.datacontract.org/2004/07/BNE.BLL.CEP")]
    [System.SerializableAttribute()]
    public partial class CEP : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BairroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BairroAbreviadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplementoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EncontrouField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogradouroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumeroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoLogradouroField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bairro {
            get {
                return this.BairroField;
            }
            set {
                if ((object.ReferenceEquals(this.BairroField, value) != true)) {
                    this.BairroField = value;
                    this.RaisePropertyChanged("Bairro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BairroAbreviado {
            get {
                return this.BairroAbreviadoField;
            }
            set {
                if ((object.ReferenceEquals(this.BairroAbreviadoField, value) != true)) {
                    this.BairroAbreviadoField = value;
                    this.RaisePropertyChanged("BairroAbreviado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cep {
            get {
                return this.CepField;
            }
            set {
                if ((object.ReferenceEquals(this.CepField, value) != true)) {
                    this.CepField = value;
                    this.RaisePropertyChanged("Cep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cidade {
            get {
                return this.CidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.CidadeField, value) != true)) {
                    this.CidadeField = value;
                    this.RaisePropertyChanged("Cidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Complemento {
            get {
                return this.ComplementoField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplementoField, value) != true)) {
                    this.ComplementoField = value;
                    this.RaisePropertyChanged("Complemento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Encontrou {
            get {
                return this.EncontrouField;
            }
            set {
                if ((this.EncontrouField.Equals(value) != true)) {
                    this.EncontrouField = value;
                    this.RaisePropertyChanged("Encontrou");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Estado {
            get {
                return this.EstadoField;
            }
            set {
                if ((object.ReferenceEquals(this.EstadoField, value) != true)) {
                    this.EstadoField = value;
                    this.RaisePropertyChanged("Estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logradouro {
            get {
                return this.LogradouroField;
            }
            set {
                if ((object.ReferenceEquals(this.LogradouroField, value) != true)) {
                    this.LogradouroField = value;
                    this.RaisePropertyChanged("Logradouro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Numero {
            get {
                return this.NumeroField;
            }
            set {
                if ((object.ReferenceEquals(this.NumeroField, value) != true)) {
                    this.NumeroField = value;
                    this.RaisePropertyChanged("Numero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TipoLogradouro {
            get {
                return this.TipoLogradouroField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoLogradouroField, value) != true)) {
                    this.TipoLogradouroField = value;
                    this.RaisePropertyChanged("TipoLogradouro");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Colunas", Namespace="http://schemas.datacontract.org/2004/07/BNE.BLL.CEP")]
    public enum Colunas : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cep = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TipoLogradouro = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Logradouro = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bairro = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cidade = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Estado = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Complemento = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirecaoOrdenacao", Namespace="http://schemas.datacontract.org/2004/07/BNE.BLL.CEP")]
    public enum DirecaoOrdenacao : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ASC = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DESC = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BneCepService.ICEP")]
    public interface ICEP {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/CompletarCEP", ReplyAction="http://tempuri.org/ICEP/CompletarCEPResponse")]
        Bne.Web.Services.API.BneCepService.CompletarCEPResponse CompletarCEP(Bne.Web.Services.API.BneCepService.CompletarCEPRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/CompletarCEP", ReplyAction="http://tempuri.org/ICEP/CompletarCEPResponse")]
        System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.CompletarCEPResponse> CompletarCEPAsync(Bne.Web.Services.API.BneCepService.CompletarCEPRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/RecuperarQuantidadeEnderecosPorCEP", ReplyAction="http://tempuri.org/ICEP/RecuperarQuantidadeEnderecosPorCEPResponse")]
        int RecuperarQuantidadeEnderecosPorCEP(Bne.Web.Services.API.BneCepService.CEP cep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/RecuperarQuantidadeEnderecosPorCEP", ReplyAction="http://tempuri.org/ICEP/RecuperarQuantidadeEnderecosPorCEPResponse")]
        System.Threading.Tasks.Task<int> RecuperarQuantidadeEnderecosPorCEPAsync(Bne.Web.Services.API.BneCepService.CEP cep);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/ConsultaCEP", ReplyAction="http://tempuri.org/ICEP/ConsultaCEPResponse")]
        Bne.Web.Services.API.BneCepService.CEP[] ConsultaCEP(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/ConsultaCEP", ReplyAction="http://tempuri.org/ICEP/ConsultaCEPResponse")]
        System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.CEP[]> ConsultaCEPAsync(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/ConsultaCEPPaginacao", ReplyAction="http://tempuri.org/ICEP/ConsultaCEPPaginacaoResponse")]
        Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoResponse ConsultaCEPPaginacao(Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/ConsultaCEPPaginacao", ReplyAction="http://tempuri.org/ICEP/ConsultaCEPPaginacaoResponse")]
        System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoResponse> ConsultaCEPPaginacaoAsync(Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/ListarCeps", ReplyAction="http://tempuri.org/ICEP/ListarCepsResponse")]
        Bne.Web.Services.API.BneCepService.CEP[] ListarCeps(string csvCEPs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICEP/ListarCeps", ReplyAction="http://tempuri.org/ICEP/ListarCepsResponse")]
        System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.CEP[]> ListarCepsAsync(string csvCEPs);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompletarCEP", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CompletarCEPRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Bne.Web.Services.API.BneCepService.CEP cep;
        
        public CompletarCEPRequest() {
        }
        
        public CompletarCEPRequest(Bne.Web.Services.API.BneCepService.CEP cep) {
            this.cep = cep;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CompletarCEPResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CompletarCEPResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Bne.Web.Services.API.BneCepService.CEP cep;
        
        public CompletarCEPResponse() {
        }
        
        public CompletarCEPResponse(Bne.Web.Services.API.BneCepService.CEP cep) {
            this.cep = cep;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConsultaCEPPaginacao", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConsultaCEPPaginacaoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string cep;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string logradouro;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string tipoLogradouro;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string bairro;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string estado;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string cidade;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public Bne.Web.Services.API.BneCepService.Colunas nomeColuna;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public Bne.Web.Services.API.BneCepService.DirecaoOrdenacao direcaoOrdenacao;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public int paginaCorrente;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=9)]
        public int tamanhoPagina;
        
        public ConsultaCEPPaginacaoRequest() {
        }
        
        public ConsultaCEPPaginacaoRequest(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, Bne.Web.Services.API.BneCepService.Colunas nomeColuna, Bne.Web.Services.API.BneCepService.DirecaoOrdenacao direcaoOrdenacao, int paginaCorrente, int tamanhoPagina) {
            this.cep = cep;
            this.logradouro = logradouro;
            this.tipoLogradouro = tipoLogradouro;
            this.bairro = bairro;
            this.estado = estado;
            this.cidade = cidade;
            this.nomeColuna = nomeColuna;
            this.direcaoOrdenacao = direcaoOrdenacao;
            this.paginaCorrente = paginaCorrente;
            this.tamanhoPagina = tamanhoPagina;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConsultaCEPPaginacaoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConsultaCEPPaginacaoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Bne.Web.Services.API.BneCepService.CEP[] ConsultaCEPPaginacaoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalRegistros;
        
        public ConsultaCEPPaginacaoResponse() {
        }
        
        public ConsultaCEPPaginacaoResponse(Bne.Web.Services.API.BneCepService.CEP[] ConsultaCEPPaginacaoResult, int totalRegistros) {
            this.ConsultaCEPPaginacaoResult = ConsultaCEPPaginacaoResult;
            this.totalRegistros = totalRegistros;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICEPChannel : Bne.Web.Services.API.BneCepService.ICEP, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CEPClient : System.ServiceModel.ClientBase<Bne.Web.Services.API.BneCepService.ICEP>, Bne.Web.Services.API.BneCepService.ICEP {
        
        public CEPClient() {
        }
        
        public CEPClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CEPClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CEPClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CEPClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bne.Web.Services.API.BneCepService.CompletarCEPResponse Bne.Web.Services.API.BneCepService.ICEP.CompletarCEP(Bne.Web.Services.API.BneCepService.CompletarCEPRequest request) {
            return base.Channel.CompletarCEP(request);
        }
        
        public void CompletarCEP(ref Bne.Web.Services.API.BneCepService.CEP cep) {
            Bne.Web.Services.API.BneCepService.CompletarCEPRequest inValue = new Bne.Web.Services.API.BneCepService.CompletarCEPRequest();
            inValue.cep = cep;
            Bne.Web.Services.API.BneCepService.CompletarCEPResponse retVal = ((Bne.Web.Services.API.BneCepService.ICEP)(this)).CompletarCEP(inValue);
            cep = retVal.cep;
        }
        
        public System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.CompletarCEPResponse> CompletarCEPAsync(Bne.Web.Services.API.BneCepService.CompletarCEPRequest request) {
            return base.Channel.CompletarCEPAsync(request);
        }
        
        public int RecuperarQuantidadeEnderecosPorCEP(Bne.Web.Services.API.BneCepService.CEP cep) {
            return base.Channel.RecuperarQuantidadeEnderecosPorCEP(cep);
        }
        
        public System.Threading.Tasks.Task<int> RecuperarQuantidadeEnderecosPorCEPAsync(Bne.Web.Services.API.BneCepService.CEP cep) {
            return base.Channel.RecuperarQuantidadeEnderecosPorCEPAsync(cep);
        }
        
        public Bne.Web.Services.API.BneCepService.CEP[] ConsultaCEP(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao) {
            return base.Channel.ConsultaCEP(cep, logradouro, tipoLogradouro, bairro, estado, cidade, ordenacao);
        }
        
        public System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.CEP[]> ConsultaCEPAsync(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, string ordenacao) {
            return base.Channel.ConsultaCEPAsync(cep, logradouro, tipoLogradouro, bairro, estado, cidade, ordenacao);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoResponse Bne.Web.Services.API.BneCepService.ICEP.ConsultaCEPPaginacao(Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoRequest request) {
            return base.Channel.ConsultaCEPPaginacao(request);
        }
        
        public Bne.Web.Services.API.BneCepService.CEP[] ConsultaCEPPaginacao(string cep, string logradouro, string tipoLogradouro, string bairro, string estado, string cidade, Bne.Web.Services.API.BneCepService.Colunas nomeColuna, Bne.Web.Services.API.BneCepService.DirecaoOrdenacao direcaoOrdenacao, int paginaCorrente, int tamanhoPagina, out int totalRegistros) {
            Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoRequest inValue = new Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoRequest();
            inValue.cep = cep;
            inValue.logradouro = logradouro;
            inValue.tipoLogradouro = tipoLogradouro;
            inValue.bairro = bairro;
            inValue.estado = estado;
            inValue.cidade = cidade;
            inValue.nomeColuna = nomeColuna;
            inValue.direcaoOrdenacao = direcaoOrdenacao;
            inValue.paginaCorrente = paginaCorrente;
            inValue.tamanhoPagina = tamanhoPagina;
            Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoResponse retVal = ((Bne.Web.Services.API.BneCepService.ICEP)(this)).ConsultaCEPPaginacao(inValue);
            totalRegistros = retVal.totalRegistros;
            return retVal.ConsultaCEPPaginacaoResult;
        }
        
        public System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoResponse> ConsultaCEPPaginacaoAsync(Bne.Web.Services.API.BneCepService.ConsultaCEPPaginacaoRequest request) {
            return base.Channel.ConsultaCEPPaginacaoAsync(request);
        }
        
        public Bne.Web.Services.API.BneCepService.CEP[] ListarCeps(string csvCEPs) {
            return base.Channel.ListarCeps(csvCEPs);
        }
        
        public System.Threading.Tasks.Task<Bne.Web.Services.API.BneCepService.CEP[]> ListarCepsAsync(string csvCEPs) {
            return base.Channel.ListarCepsAsync(csvCEPs);
        }
    }
}
